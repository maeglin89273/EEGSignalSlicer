package view.component.trainingview;

import view.component.trainingview.phasepanel.EvaluationPhase;
import view.component.trainingview.phasepanel.FeatureExtractionPhase;
import view.component.trainingview.phasepanel.basecomponent.SectionPanel;

import javax.swing.*;
import java.awt.*;
import java.text.DecimalFormat;
import java.text.NumberFormat;

public class TrainingDialog extends JDialog {
    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;
    private JList phaseList;
    private JPanel phasePlaceholder;

    private static final String[] PHASES = new String[]{"Evaluation", "Feature Extraction", "Classifier", "Splits of Dataset"};

    private TrainingDialog() {
        $$$setupUI$$$();
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        selectPhase(phaseList.getSelectedIndex());

    }

    private void setupListeners() {
        buttonOK.addActionListener(e -> this.onOK());
        phaseList.addListSelectionListener(e -> this.selectPhase(e.getFirstIndex()));
    }

    private void selectPhase(int index) {
//        phasePlaceholder.remove(0);

        phasePlaceholder.add(new EvaluationPhase());

    }

    private void onOK() {
//        this.setVisible(false);
    }

    public static void main(String... args) throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        TrainingDialog dialog = new TrainingDialog();
        dialog.pack();
        dialog.setVisible(true);
        dialog.dispose();

    }

    private void createUIComponents() {
        DefaultListModel<String> listModel = new DefaultListModel<>();
        for (String pahseText : PHASES) {
            listModel.addElement(pahseText);
        }

        phaseList = new JList(listModel);
        phaseList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        phaseList.setSelectedIndex(1);

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPane.add(panel1, gbc);
        buttonOK = new JButton();
        buttonOK.setText("OK");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.insets = new Insets(5, 5, 5, 5);
        panel1.add(buttonOK, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        contentPane.add(panel2, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel2.add(phaseList, gbc);
        phasePlaceholder = new JPanel();
        phasePlaceholder.setLayout(new BorderLayout(0, 0));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel2.add(phasePlaceholder, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
